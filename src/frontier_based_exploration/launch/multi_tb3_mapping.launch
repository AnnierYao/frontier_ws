<launch>
    <!-- Arguments -->
    <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
    <arg name="move_forward_only" default="false"/>

    <arg name="first_tb3"  default="robot_1"/>
    <arg name="second_tb3" default="robot_2"/>
    <arg name="third_tb3"  default="robot_3"/>

    <node pkg="tf" type="static_transform_publisher" name="world_to_mergedmap_tf_broadcaster"  args="0.385 0.385 0 0 0 0 world map 20"/>

    <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg first_tb3)_tf_broadcaster"  args="0 0 0 0 0 0 /map /$(arg first_tb3)/map 20"/>
    <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg second_tb3)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg second_tb3)/map 20"/>
    <node pkg="tf" type="static_transform_publisher" name="world_to_$(arg third_tb3)_tf_broadcaster" args="0 0 0 0 0 0 /map /$(arg third_tb3)/map 20"/>

    <!-- 
    <node pkg="tf" type="static_transform_publisher" name="$(arg first_tb3)_odom_to_base"  args="0 0 0 0 0 0 $(arg first_tb3)/odom $(arg first_tb3)/base_footprint 10"/>
    <node pkg="tf" type="static_transform_publisher" name="$(arg second_tb3)_odom_to_base" args="0 0 0 0 0 0 $(arg second_tb3)/odom $(arg second_tb3)/base_footprint 10"/>
    <node pkg="tf" type="static_transform_publisher" name="$(arg third_tb3)_odom_to_base" args="0 0 0 0 0 0 $(arg third_tb3)/odom $(arg third_tb3)/base_footprint 10"/>
    -->

    <!-- <arg name="first_tb3_x_pos" default="-6.0"/>
    <arg name="first_tb3_y_pos" default=" 3.0"/>
    <arg name="first_tb3_z_pos" default=" 0.0"/>
    <arg name="first_tb3_yaw"   default=" 0.0"/>

    <arg name="second_tb3_x_pos" default=" 7.0"/>
    <arg name="second_tb3_y_pos" default="-1.0"/>
    <arg name="second_tb3_z_pos" default=" 0.0"/>
    <arg name="second_tb3_yaw"   default=" 0.0"/>

    <arg name="third_tb3_x_pos" default=" 0.5"/>
    <arg name="third_tb3_y_pos" default=" 3.0"/>
    <arg name="third_tb3_z_pos" default=" 0.0"/>
    <arg name="third_tb3_yaw"   default=" 0.0"/> -->

    <arg name="first_tb3_x_pos" default="-7.5"/>
    <arg name="first_tb3_y_pos" default=" 4.0"/>
    <arg name="first_tb3_z_pos" default=" 0.0"/>
    <arg name="first_tb3_yaw"   default=" 0.0"/>

    <arg name="second_tb3_x_pos" default=" 3.5"/>
    <arg name="second_tb3_y_pos" default="-6.0"/>
    <arg name="second_tb3_z_pos" default=" 0.0"/>
    <arg name="second_tb3_yaw"   default=" 0.0"/>

    <arg name="third_tb3_x_pos" default=" 4.0"/>
    <arg name="third_tb3_y_pos" default=" 6.5"/>
    <arg name="third_tb3_z_pos" default=" 0.0"/>
    <arg name="third_tb3_yaw"   default=" 0.0"/>

    <!-- <arg name="first_tb3_x_pos" default=" 1.5"/>
    <arg name="first_tb3_y_pos" default="-7.0"/>
    <arg name="first_tb3_z_pos" default=" 0.0"/>
    <arg name="first_tb3_yaw"   default=" 0.0"/>

    <arg name="second_tb3_x_pos" default=" 4.0"/>
    <arg name="second_tb3_y_pos" default="-7.0"/>
    <arg name="second_tb3_z_pos" default=" 0.0"/>
    <arg name="second_tb3_yaw"   default=" 0.0"/>

    <arg name="third_tb3_x_pos" default=" 7.0"/>
    <arg name="third_tb3_y_pos" default="-7.0"/>
    <arg name="third_tb3_z_pos" default=" 0.0"/>
    <arg name="third_tb3_yaw"   default=" 0.0"/> -->

    <!-- Environment -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find frontier_based_exploration)/worlds/my_world.world"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>


    <group ns = "$(arg first_tb3)">
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro robot_namespace:=$(arg first_tb3)"/>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="50.0" />
            <param name="tf_prefix" value="$(arg first_tb3)" />
        </node>
        <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
            <param name="base_frame" value="$(arg first_tb3)/base_footprint"/>
            <param name="odom_frame" value="$(arg first_tb3)/odom"/>
            <param name="map_frame"  value="$(arg first_tb3)/map"/>
            <rosparam command="load" file="$(find frontier_based_exploration)/params/gmapping_params.yaml" />
        </node>

        <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model $(arg first_tb3) -x $(arg first_tb3_x_pos) -y $(arg first_tb3_y_pos) -z $(arg first_tb3_z_pos) -Y $(arg first_tb3_yaw) -param robot_description" />
    </group>

    <group ns = "$(arg second_tb3)">
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro robot_namespace:=$(arg second_tb3)"/>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="50.0" />
            <param name="tf_prefix" value="$(arg second_tb3)" />
        </node>

        <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
            <param name="base_frame" value="$(arg second_tb3)/base_footprint"/>
            <param name="odom_frame" value="$(arg second_tb3)/odom"/>
            <param name="map_frame"  value="$(arg second_tb3)/map"/>
            <rosparam command="load" file="$(find frontier_based_exploration)/params/gmapping_params.yaml" />
        </node>

        <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model $(arg second_tb3) -x $(arg second_tb3_x_pos) -y $(arg second_tb3_y_pos) -z $(arg second_tb3_z_pos) -Y $(arg second_tb3_yaw) -param robot_description" />
    </group>

    <group ns = "$(arg third_tb3)">
        <param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro robot_namespace:=$(arg third_tb3)"/>

        <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
            <param name="publish_frequency" type="double" value="50.0" />
            <param name="tf_prefix" value="$(arg third_tb3)" />
        </node>

        <node pkg="gmapping" type="slam_gmapping" name="turtlebot3_slam_gmapping" output="screen">
            <param name="base_frame" value="$(arg third_tb3)/base_footprint"/>
            <param name="odom_frame" value="$(arg third_tb3)/odom"/>
            <param name="map_frame"  value="$(arg third_tb3)/map"/>
            <rosparam command="load" file="$(find frontier_based_exploration)/params/gmapping_params.yaml" />
        </node>

        <node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model $(arg third_tb3) -x $(arg third_tb3_x_pos) -y $(arg third_tb3_y_pos) -z $(arg third_tb3_z_pos) -Y $(arg third_tb3_yaw) -param robot_description" />
    </group>
    


    <!-- run the preset rviz -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d /home/annie/frontier_ws/src/frontier_based_exploration/rviz/multi_turtlebot3_slam.rviz" />

    <!-- Multi Robot Map Merge -->
    <!-- http://wiki.ros.org/multirobot_map_merge -->
    <group ns="$(arg first_tb3)/map_merge">
        <param name="init_pose_x"   value="$(arg first_tb3_x_pos)"/>
        <param name="init_pose_y"   value="$(arg first_tb3_y_pos)"/>
        <param name="init_pose_z"   value="$(arg first_tb3_z_pos)"/>
        <param name="init_pose_yaw" value="$(arg first_tb3_yaw)"  />
    </group>

    <group ns="$(arg second_tb3)/map_merge">
        <param name="init_pose_x"   value="$(arg second_tb3_x_pos)"/>
        <param name="init_pose_y"   value="$(arg second_tb3_y_pos)"/>
        <param name="init_pose_z"   value="$(arg second_tb3_z_pos)"/>
        <param name="init_pose_yaw" value="$(arg second_tb3_yaw)"  />
    </group>

    <group ns="$(arg third_tb3)/map_merge">
        <param name="init_pose_x"   value="$(arg third_tb3_x_pos)"/>
        <param name="init_pose_y"   value="$(arg third_tb3_y_pos)"/>
        <param name="init_pose_z"   value="$(arg third_tb3_z_pos)"/>
        <param name="init_pose_yaw" value="$(arg third_tb3_yaw)"  />
    </group>

    <node pkg="multirobot_map_merge" type="map_merge" respawn="false" name="map_merge">
        <param name="robot_map_topic" value="map"/>
        <param name="robot_namespace" value="robot"/>
        <param name="merged_map_topic" value="/map"/>
        <param name="world_frame" value="world"/>
        <param name="known_init_poses" value="true"/>
        <param name="merging_rate" value="3.0"/>
        <!-- <param name="merging_rate" value="0.1"/> -->
        <param name="discovery_rate" value="0.02"/>
        <param name="estimation_rate" value="0.6"/>
        <param name="estimation_confidence" value="0.6"/>

        <rosparam param="input_topics">["/robot_1/map", "/robot_2/map", "/robot_3/map"]</rosparam>
    </node>

</launch>

